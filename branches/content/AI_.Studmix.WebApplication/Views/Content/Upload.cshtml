@using AI_.Studmix.WebApplication.ViewModels.Content
@model UploadViewModel
@{
    ViewBag.Title = "Upload";
}
<h2>
    Загрузка контента
</h2>

@Html.ValidationSummary()
@using (Html.BeginForm("Upload", "Content", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    <table>
        <tr class="top">
            <td>
                <p>
                    @Html.LabelFor(m => m.ContentFiles)
                    <br/>
                    <input type="file" multiple="true" name="ContentFiles" />
                    <br/>
                    @Html.ValidationMessageFor(m => m.ContentFiles)
                </p>
                <p>
                    @Html.LabelFor(m => m.PreviewContentFiles)
                    <br/>
                    <input type="file" multiple="true" name="PreviewContentFiles" />
                    <br/>
                    @Html.ValidationMessageFor(m => m.PreviewContentFiles)
                </p>
                <p>
                    <input type="submit" value="Сохранить"/>
                </p>
            </td>
            <td >
                <input type="button" value="по умолчанию" id="btnDefault"/>
                @foreach (var property in Model.Properties)
                {
                    var attrs = new Dictionary<string, object> { { "data-autocomplete-source-path", "/Content/UpdateStates/" + property.ID } };
                    Model.States[property.ID] = null;
                    <div class="editor-field">
                        <span>
                            @property.Name
                        </span>
                        <br />
                        <span>
                            @Html.DropDownListFor(x => x.States[property.ID], new List<SelectListItem>(),attrs)
                        </span>
                    </div>
                }
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(m => m.Caption)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Caption)
                    @Html.ValidationMessageFor(m => m.Caption)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(m => m.Description)
                </div>
                <div class="editor-field">
                    @Html.TextAreaFor(m => m.Description)
                    @Html.ValidationMessageFor(m => m.Description)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(m => m.Price)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(m => m.Price)
                    @Html.ValidationMessageFor(m => m.Price)
                </div>
            </td>
        </tr>
    </table>
    @Html.Hidden("targetPropertyId")
}

@section scripts{
    @Url.Script("jquery.ajax.form.js")
    @Url.Script("ui.combobox.js")
}

<script type="text/javascript">
    $(function () {
        $("[data-autocomplete-source-path]").each(function () {
            $(this).combobox();
        });

        $("#btnDefault").click(function () {
            $("#States_1_").val("Россия");
            $("#States_2_").val("Казань");
            $("#States_3_").val("Университет");
            $("#States_4_").val("КНИТУ им. А. Н. Туполева (бывш. КГТУ-КАИ им. Туполева)");
            $("#States_5_").val("Заочная");
        });
    });

    function UpdateAutocompleteStates(propertyId) {
        alert(propertyId);
        $("#targetPropertyId").val(propertyId);
        var formData = $("form").formSerialize();
        $.ajax(
            {
                url: '/Content/UpdateStates',
                type: 'POST',
                data: formData,
                dataType: 'json',
                success: OnAjaxRequestSuccess
            }
        );
        alert("out");
    }

    function OnAjaxRequestSuccess(response) {
        alert(response);
        var targetPropertyId = $("#targetPropertyId").val();
        var select = $("select[data-property-id=" + targetPropertyId + "]");
        var states = response.split("|");
        select.text("");
        for (var i = 0; i < states.length; i++) {
            select.append("<option id=\"" + states[i] + "\">" + states[i] + "</option>");
        }
        select.combobox();
    }
    
</script>