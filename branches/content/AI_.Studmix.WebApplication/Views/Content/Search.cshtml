@using AI_.Studmix.WebApplication.ViewModels.Content
@model SearchViewModel

@{
    ViewBag.Title = "Поиск";
}

<h2>title</h2>

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    foreach (var property in Model.Properties)
    {
        var attrs = new Dictionary<string, object> { { "data-property-id", property.ID } };
        Model.States.Add(property.ID, "");

        <p>
            <span>
                @property.Name :
            </span>
            <br/>
            @Html.DropDownListFor(x => x.States[property.ID],
                                    new SelectList(property.States, "ID", "Value"), "-",attrs)
        </p>
    }
}
<script src="@Url.Content("~/Scripts/jquery.ajax.form.js")" type="text/javascript"> </script>
<script type="text/javascript">
    $(function () {
        $("select[data-property-id]").each(function () {
            $(this).focus(UpdateStates);
        });
    });

    function UpdateStates() {
        var formData = $("form").formSerialize();
        $.ajax(
            {
                url: '/Content/UpdateStates',
                type: 'POST',
                data: formData,
                dataType: 'json',
                success: OnUpdateAutocompleteStatesSuccess
            }
        );
    }

    function OnUpdateAutocompleteStatesSuccess(response) {
        for (var i = 0; i < response.Properties.length; i++) {
            var select = $("select[data-property-id=" + response.Properties[i].ID + "]");
            var options = response.Properties[i].States.split("|");
            select.text("");
            
            $.each(options, function () {
                select.append("<option>" + this + "</option>");
            });
            
//            input.attr("data-autocomplete", response.Properties[i].States);

        }
    }
    
</script>